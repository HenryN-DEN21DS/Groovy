/*
 *  Licensed to the Apache Software Foundation (ASF) under one
 *  or more contributor license agreements.  See the NOTICE file
 *  distributed with this work for additional information
 *  regarding copyright ownership.  The ASF licenses this file
 *  to you under the Apache License, Version 2.0 (the
 *  "License"); you may not use this file except in compliance
 *  with the License.  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an
 *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, either express or implied.  See the License for the
 *  specific language governing permissions and limitations
 *  under the License.
 */
package groovy.lang;

import groovy.test.GroovyTestCase;
import org.codehaus.groovy.runtime.DefaultGroovyMethods;

import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Set;

import static groovy.lang.Tuple.tuple;
import static org.junit.Assert.assertNotEquals;

public class TupleTest extends GroovyTestCase {

    private final Object[] data = {"a", "b", "c"};
    final Tuple t = new Tuple<>(data);

    public void testSize() {
        assertEquals("Size of " + t, 3, t.size());

        assertEquals("get(0)", "a", t.get(0));
        assertEquals("get(1)", "b", t.get(1));
    }

    public void testGetOutOfTuple() {
        try {
            System.out.println(t.get(-1));
            fail("Should have thrown IndexOut");
        } catch (IndexOutOfBoundsException e) {
            // worked
        }
        try {
            System.out.println(t.get(10));
            fail("Should have thrown IndexOut");
        } catch (IndexOutOfBoundsException e) {
            // worked
        }

    }

    public void testContains() {
        assertTrue("contains a", t.contains("a"));
        assertTrue("contains b", t.contains("b"));
    }

    public void testSubList() {
        List s = t.subList(1, 2);

        assertTrue("is a Tuple", s instanceof Tuple);

        assertEquals("size", 1, s.size());
    }

    public void testSubTuple() {
        Tuple s = t.subTuple(1, 2);
        assertTrue("is a Tuple", isTuple(s));
        assertEquals("size", 1, s.size());
    }

    private boolean isTuple(Object s) {
        return s instanceof Tuple;
    }

    public void testHashCodeAndEquals() {
        Tuple a = new Tuple<Object>("a", "b", "c");
        Tuple b = new Tuple<Object>("a", "b", "c");
        Tuple c = new Tuple<Object>("d", "b", "c");
        Tuple d = new Tuple<Object>("a", "b");
        Tuple2<String, String> e = new Tuple2<>("a", "b");
        Tuple2<String, String> f = new Tuple2<>("a", "c");

        assertEquals("hashcode", a.hashCode(), b.hashCode());
        assertTrue("hashcode", a.hashCode() != c.hashCode());

        assertEquals("a and b", a, b);
        assertNotEquals("a != c", a, c);

        assertNotEquals("!a.equals(null)", null, a);

        assertEquals("d.equals(e)", d, e);
        assertEquals("e.equals(d)", e, d);
        assertNotEquals("!e.equals(f)", e, f);
        assertNotEquals("!f.equals(e)", f, e);
    }

    public void testIterator() {
        final Tuple<Object> t = new Tuple<>(1, 2, 3);
        assertEquals(6, DefaultGroovyMethods.sum(t.iterator()));
        final Tuple3<Integer, Integer, Integer> t3 = new Tuple3<>(1, 2, 3);
        Iterator iterator = t3.iterator();
        assertEquals(6, DefaultGroovyMethods.sum(iterator));
    }

    public void testEqualsHashCode() {
        Set<Tuple2<Integer, String>> set = new HashSet<>();

        set.add(tuple(1, "abc"));
        assertEquals(1, set.size());
        set.add(tuple(1, "abc"));
        assertEquals(1, set.size());
        set.add(tuple(null, null));
        assertEquals(2, set.size());
        set.add(tuple(null, null));
        assertEquals(2, set.size());
        set.add(tuple(1, null));
        assertEquals(3, set.size());
        set.add(tuple(1, null));
        assertEquals(3, set.size());
    }

    public void testEqualsNull() {
        assertNotEquals(null, tuple(1));
        assertNotEquals(null, tuple(1, 2));
        assertNotEquals(null, tuple(1, 2, 3));
    }

    public void testGroovyStyleAccessor() {
        try {
            assertScript("def t = new Tuple1<String>('Daniel'); assert 'Daniel' == t.v1");
        } catch (Exception e) {
            assert false : e.getMessage();
        }
    }

    // ---------------------------

    public void testTuple1() {
        Tuple1<Integer> t = new Tuple1<>(1);

        assertEquals(1, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple2() {
        Tuple2<Integer, Integer> t = new Tuple2<>(1, 2);

        assertEquals(2, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple3() {
        Tuple3<Integer, Integer, Integer> t = new Tuple3<>(1, 2, 3);

        assertEquals(3, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple4() {
        Tuple4<Integer, Integer, Integer, Integer> t = new Tuple4<>(1, 2, 3, 4);

        assertEquals(4, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple5() {
        Tuple5<Integer, Integer, Integer, Integer, Integer> t = new Tuple5<>(1, 2, 3, 4, 5);

        assertEquals(5, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple6() {
        Tuple6<Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple6<>(1, 2, 3, 4, 5, 6);

        assertEquals(6, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple7() {
        Tuple7<Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple7<>(1, 2, 3, 4, 5, 6, 7);

        assertEquals(7, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple8() {
        Tuple8<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple8<>(1, 2, 3, 4, 5, 6, 7, 8);

        assertEquals(8, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple9() {
        Tuple9<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple9<>(1, 2, 3, 4, 5, 6, 7, 8, 9);

        assertEquals(9, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple10() {
        Tuple10<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple10<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);

        assertEquals(10, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple11() {
        Tuple11<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple11<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11);

        assertEquals(11, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple12() {
        Tuple12<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple12<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);

        assertEquals(12, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple13() {
        Tuple13<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple13<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13);

        assertEquals(13, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple14() {
        Tuple14<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple14<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14);

        assertEquals(14, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple15() {
        Tuple15<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple15<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);

        assertEquals(15, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple16() {
        Tuple16<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple16<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16);

        assertEquals(16, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple17() {
        Tuple17<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple17<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17);

        assertEquals(17, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple18() {
        Tuple18<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple18<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18);

        assertEquals(18, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple19() {
        Tuple19<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple19<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19);

        assertEquals(19, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple20() {
        Tuple20<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple20<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20);

        assertEquals(20, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple21() {
        Tuple21<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple21<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21);

        assertEquals(21, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple22() {
        Tuple22<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple22<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22);

        assertEquals(22, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple23() {
        Tuple23<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple23<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23);

        assertEquals(23, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple24() {
        Tuple24<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple24<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24);

        assertEquals(24, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple25() {
        Tuple25<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple25<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25);

        assertEquals(25, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple26() {
        Tuple26<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple26<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26);

        assertEquals(26, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple27() {
        Tuple27<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple27<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27);

        assertEquals(27, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple28() {
        Tuple28<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple28<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28);

        assertEquals(28, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple29() {
        Tuple29<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple29<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29);

        assertEquals(29, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(Integer.valueOf(29), t.getV29());
        assertEquals(29, t.get(28));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple30() {
        Tuple30<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple30<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30);

        assertEquals(30, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(Integer.valueOf(29), t.getV29());
        assertEquals(29, t.get(28));
        assertEquals(Integer.valueOf(30), t.getV30());
        assertEquals(30, t.get(29));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple31() {
        Tuple31<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple31<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31);

        assertEquals(31, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(Integer.valueOf(29), t.getV29());
        assertEquals(29, t.get(28));
        assertEquals(Integer.valueOf(30), t.getV30());
        assertEquals(30, t.get(29));
        assertEquals(Integer.valueOf(31), t.getV31());
        assertEquals(31, t.get(30));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple32() {
        Tuple32<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple32<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32);

        assertEquals(32, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(Integer.valueOf(29), t.getV29());
        assertEquals(29, t.get(28));
        assertEquals(Integer.valueOf(30), t.getV30());
        assertEquals(30, t.get(29));
        assertEquals(Integer.valueOf(31), t.getV31());
        assertEquals(31, t.get(30));
        assertEquals(Integer.valueOf(32), t.getV32());
        assertEquals(32, t.get(31));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple33() {
        Tuple33<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple33<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33);

        assertEquals(33, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(Integer.valueOf(29), t.getV29());
        assertEquals(29, t.get(28));
        assertEquals(Integer.valueOf(30), t.getV30());
        assertEquals(30, t.get(29));
        assertEquals(Integer.valueOf(31), t.getV31());
        assertEquals(31, t.get(30));
        assertEquals(Integer.valueOf(32), t.getV32());
        assertEquals(32, t.get(31));
        assertEquals(Integer.valueOf(33), t.getV33());
        assertEquals(33, t.get(32));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple34() {
        Tuple34<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple34<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34);

        assertEquals(34, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(Integer.valueOf(29), t.getV29());
        assertEquals(29, t.get(28));
        assertEquals(Integer.valueOf(30), t.getV30());
        assertEquals(30, t.get(29));
        assertEquals(Integer.valueOf(31), t.getV31());
        assertEquals(31, t.get(30));
        assertEquals(Integer.valueOf(32), t.getV32());
        assertEquals(32, t.get(31));
        assertEquals(Integer.valueOf(33), t.getV33());
        assertEquals(33, t.get(32));
        assertEquals(Integer.valueOf(34), t.getV34());
        assertEquals(34, t.get(33));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple35() {
        Tuple35<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple35<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35);

        assertEquals(35, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(Integer.valueOf(29), t.getV29());
        assertEquals(29, t.get(28));
        assertEquals(Integer.valueOf(30), t.getV30());
        assertEquals(30, t.get(29));
        assertEquals(Integer.valueOf(31), t.getV31());
        assertEquals(31, t.get(30));
        assertEquals(Integer.valueOf(32), t.getV32());
        assertEquals(32, t.get(31));
        assertEquals(Integer.valueOf(33), t.getV33());
        assertEquals(33, t.get(32));
        assertEquals(Integer.valueOf(34), t.getV34());
        assertEquals(34, t.get(33));
        assertEquals(Integer.valueOf(35), t.getV35());
        assertEquals(35, t.get(34));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple36() {
        Tuple36<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple36<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36);

        assertEquals(36, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(Integer.valueOf(29), t.getV29());
        assertEquals(29, t.get(28));
        assertEquals(Integer.valueOf(30), t.getV30());
        assertEquals(30, t.get(29));
        assertEquals(Integer.valueOf(31), t.getV31());
        assertEquals(31, t.get(30));
        assertEquals(Integer.valueOf(32), t.getV32());
        assertEquals(32, t.get(31));
        assertEquals(Integer.valueOf(33), t.getV33());
        assertEquals(33, t.get(32));
        assertEquals(Integer.valueOf(34), t.getV34());
        assertEquals(34, t.get(33));
        assertEquals(Integer.valueOf(35), t.getV35());
        assertEquals(35, t.get(34));
        assertEquals(Integer.valueOf(36), t.getV36());
        assertEquals(36, t.get(35));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple37() {
        Tuple37<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple37<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37);

        assertEquals(37, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(Integer.valueOf(29), t.getV29());
        assertEquals(29, t.get(28));
        assertEquals(Integer.valueOf(30), t.getV30());
        assertEquals(30, t.get(29));
        assertEquals(Integer.valueOf(31), t.getV31());
        assertEquals(31, t.get(30));
        assertEquals(Integer.valueOf(32), t.getV32());
        assertEquals(32, t.get(31));
        assertEquals(Integer.valueOf(33), t.getV33());
        assertEquals(33, t.get(32));
        assertEquals(Integer.valueOf(34), t.getV34());
        assertEquals(34, t.get(33));
        assertEquals(Integer.valueOf(35), t.getV35());
        assertEquals(35, t.get(34));
        assertEquals(Integer.valueOf(36), t.getV36());
        assertEquals(36, t.get(35));
        assertEquals(Integer.valueOf(37), t.getV37());
        assertEquals(37, t.get(36));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple38() {
        Tuple38<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple38<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38);

        assertEquals(38, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(Integer.valueOf(29), t.getV29());
        assertEquals(29, t.get(28));
        assertEquals(Integer.valueOf(30), t.getV30());
        assertEquals(30, t.get(29));
        assertEquals(Integer.valueOf(31), t.getV31());
        assertEquals(31, t.get(30));
        assertEquals(Integer.valueOf(32), t.getV32());
        assertEquals(32, t.get(31));
        assertEquals(Integer.valueOf(33), t.getV33());
        assertEquals(33, t.get(32));
        assertEquals(Integer.valueOf(34), t.getV34());
        assertEquals(34, t.get(33));
        assertEquals(Integer.valueOf(35), t.getV35());
        assertEquals(35, t.get(34));
        assertEquals(Integer.valueOf(36), t.getV36());
        assertEquals(36, t.get(35));
        assertEquals(Integer.valueOf(37), t.getV37());
        assertEquals(37, t.get(36));
        assertEquals(Integer.valueOf(38), t.getV38());
        assertEquals(38, t.get(37));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple39() {
        Tuple39<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple39<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39);

        assertEquals(39, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(Integer.valueOf(29), t.getV29());
        assertEquals(29, t.get(28));
        assertEquals(Integer.valueOf(30), t.getV30());
        assertEquals(30, t.get(29));
        assertEquals(Integer.valueOf(31), t.getV31());
        assertEquals(31, t.get(30));
        assertEquals(Integer.valueOf(32), t.getV32());
        assertEquals(32, t.get(31));
        assertEquals(Integer.valueOf(33), t.getV33());
        assertEquals(33, t.get(32));
        assertEquals(Integer.valueOf(34), t.getV34());
        assertEquals(34, t.get(33));
        assertEquals(Integer.valueOf(35), t.getV35());
        assertEquals(35, t.get(34));
        assertEquals(Integer.valueOf(36), t.getV36());
        assertEquals(36, t.get(35));
        assertEquals(Integer.valueOf(37), t.getV37());
        assertEquals(37, t.get(36));
        assertEquals(Integer.valueOf(38), t.getV38());
        assertEquals(38, t.get(37));
        assertEquals(Integer.valueOf(39), t.getV39());
        assertEquals(39, t.get(38));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple40() {
        Tuple40<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple40<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40);

        assertEquals(40, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(Integer.valueOf(29), t.getV29());
        assertEquals(29, t.get(28));
        assertEquals(Integer.valueOf(30), t.getV30());
        assertEquals(30, t.get(29));
        assertEquals(Integer.valueOf(31), t.getV31());
        assertEquals(31, t.get(30));
        assertEquals(Integer.valueOf(32), t.getV32());
        assertEquals(32, t.get(31));
        assertEquals(Integer.valueOf(33), t.getV33());
        assertEquals(33, t.get(32));
        assertEquals(Integer.valueOf(34), t.getV34());
        assertEquals(34, t.get(33));
        assertEquals(Integer.valueOf(35), t.getV35());
        assertEquals(35, t.get(34));
        assertEquals(Integer.valueOf(36), t.getV36());
        assertEquals(36, t.get(35));
        assertEquals(Integer.valueOf(37), t.getV37());
        assertEquals(37, t.get(36));
        assertEquals(Integer.valueOf(38), t.getV38());
        assertEquals(38, t.get(37));
        assertEquals(Integer.valueOf(39), t.getV39());
        assertEquals(39, t.get(38));
        assertEquals(Integer.valueOf(40), t.getV40());
        assertEquals(40, t.get(39));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple41() {
        Tuple41<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple41<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41);

        assertEquals(41, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(Integer.valueOf(29), t.getV29());
        assertEquals(29, t.get(28));
        assertEquals(Integer.valueOf(30), t.getV30());
        assertEquals(30, t.get(29));
        assertEquals(Integer.valueOf(31), t.getV31());
        assertEquals(31, t.get(30));
        assertEquals(Integer.valueOf(32), t.getV32());
        assertEquals(32, t.get(31));
        assertEquals(Integer.valueOf(33), t.getV33());
        assertEquals(33, t.get(32));
        assertEquals(Integer.valueOf(34), t.getV34());
        assertEquals(34, t.get(33));
        assertEquals(Integer.valueOf(35), t.getV35());
        assertEquals(35, t.get(34));
        assertEquals(Integer.valueOf(36), t.getV36());
        assertEquals(36, t.get(35));
        assertEquals(Integer.valueOf(37), t.getV37());
        assertEquals(37, t.get(36));
        assertEquals(Integer.valueOf(38), t.getV38());
        assertEquals(38, t.get(37));
        assertEquals(Integer.valueOf(39), t.getV39());
        assertEquals(39, t.get(38));
        assertEquals(Integer.valueOf(40), t.getV40());
        assertEquals(40, t.get(39));
        assertEquals(Integer.valueOf(41), t.getV41());
        assertEquals(41, t.get(40));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple42() {
        Tuple42<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple42<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42);

        assertEquals(42, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(Integer.valueOf(29), t.getV29());
        assertEquals(29, t.get(28));
        assertEquals(Integer.valueOf(30), t.getV30());
        assertEquals(30, t.get(29));
        assertEquals(Integer.valueOf(31), t.getV31());
        assertEquals(31, t.get(30));
        assertEquals(Integer.valueOf(32), t.getV32());
        assertEquals(32, t.get(31));
        assertEquals(Integer.valueOf(33), t.getV33());
        assertEquals(33, t.get(32));
        assertEquals(Integer.valueOf(34), t.getV34());
        assertEquals(34, t.get(33));
        assertEquals(Integer.valueOf(35), t.getV35());
        assertEquals(35, t.get(34));
        assertEquals(Integer.valueOf(36), t.getV36());
        assertEquals(36, t.get(35));
        assertEquals(Integer.valueOf(37), t.getV37());
        assertEquals(37, t.get(36));
        assertEquals(Integer.valueOf(38), t.getV38());
        assertEquals(38, t.get(37));
        assertEquals(Integer.valueOf(39), t.getV39());
        assertEquals(39, t.get(38));
        assertEquals(Integer.valueOf(40), t.getV40());
        assertEquals(40, t.get(39));
        assertEquals(Integer.valueOf(41), t.getV41());
        assertEquals(41, t.get(40));
        assertEquals(Integer.valueOf(42), t.getV42());
        assertEquals(42, t.get(41));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple43() {
        Tuple43<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple43<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43);

        assertEquals(43, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(Integer.valueOf(29), t.getV29());
        assertEquals(29, t.get(28));
        assertEquals(Integer.valueOf(30), t.getV30());
        assertEquals(30, t.get(29));
        assertEquals(Integer.valueOf(31), t.getV31());
        assertEquals(31, t.get(30));
        assertEquals(Integer.valueOf(32), t.getV32());
        assertEquals(32, t.get(31));
        assertEquals(Integer.valueOf(33), t.getV33());
        assertEquals(33, t.get(32));
        assertEquals(Integer.valueOf(34), t.getV34());
        assertEquals(34, t.get(33));
        assertEquals(Integer.valueOf(35), t.getV35());
        assertEquals(35, t.get(34));
        assertEquals(Integer.valueOf(36), t.getV36());
        assertEquals(36, t.get(35));
        assertEquals(Integer.valueOf(37), t.getV37());
        assertEquals(37, t.get(36));
        assertEquals(Integer.valueOf(38), t.getV38());
        assertEquals(38, t.get(37));
        assertEquals(Integer.valueOf(39), t.getV39());
        assertEquals(39, t.get(38));
        assertEquals(Integer.valueOf(40), t.getV40());
        assertEquals(40, t.get(39));
        assertEquals(Integer.valueOf(41), t.getV41());
        assertEquals(41, t.get(40));
        assertEquals(Integer.valueOf(42), t.getV42());
        assertEquals(42, t.get(41));
        assertEquals(Integer.valueOf(43), t.getV43());
        assertEquals(43, t.get(42));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple44() {
        Tuple44<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple44<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44);

        assertEquals(44, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(Integer.valueOf(29), t.getV29());
        assertEquals(29, t.get(28));
        assertEquals(Integer.valueOf(30), t.getV30());
        assertEquals(30, t.get(29));
        assertEquals(Integer.valueOf(31), t.getV31());
        assertEquals(31, t.get(30));
        assertEquals(Integer.valueOf(32), t.getV32());
        assertEquals(32, t.get(31));
        assertEquals(Integer.valueOf(33), t.getV33());
        assertEquals(33, t.get(32));
        assertEquals(Integer.valueOf(34), t.getV34());
        assertEquals(34, t.get(33));
        assertEquals(Integer.valueOf(35), t.getV35());
        assertEquals(35, t.get(34));
        assertEquals(Integer.valueOf(36), t.getV36());
        assertEquals(36, t.get(35));
        assertEquals(Integer.valueOf(37), t.getV37());
        assertEquals(37, t.get(36));
        assertEquals(Integer.valueOf(38), t.getV38());
        assertEquals(38, t.get(37));
        assertEquals(Integer.valueOf(39), t.getV39());
        assertEquals(39, t.get(38));
        assertEquals(Integer.valueOf(40), t.getV40());
        assertEquals(40, t.get(39));
        assertEquals(Integer.valueOf(41), t.getV41());
        assertEquals(41, t.get(40));
        assertEquals(Integer.valueOf(42), t.getV42());
        assertEquals(42, t.get(41));
        assertEquals(Integer.valueOf(43), t.getV43());
        assertEquals(43, t.get(42));
        assertEquals(Integer.valueOf(44), t.getV44());
        assertEquals(44, t.get(43));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple45() {
        Tuple45<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple45<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45);

        assertEquals(45, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(Integer.valueOf(29), t.getV29());
        assertEquals(29, t.get(28));
        assertEquals(Integer.valueOf(30), t.getV30());
        assertEquals(30, t.get(29));
        assertEquals(Integer.valueOf(31), t.getV31());
        assertEquals(31, t.get(30));
        assertEquals(Integer.valueOf(32), t.getV32());
        assertEquals(32, t.get(31));
        assertEquals(Integer.valueOf(33), t.getV33());
        assertEquals(33, t.get(32));
        assertEquals(Integer.valueOf(34), t.getV34());
        assertEquals(34, t.get(33));
        assertEquals(Integer.valueOf(35), t.getV35());
        assertEquals(35, t.get(34));
        assertEquals(Integer.valueOf(36), t.getV36());
        assertEquals(36, t.get(35));
        assertEquals(Integer.valueOf(37), t.getV37());
        assertEquals(37, t.get(36));
        assertEquals(Integer.valueOf(38), t.getV38());
        assertEquals(38, t.get(37));
        assertEquals(Integer.valueOf(39), t.getV39());
        assertEquals(39, t.get(38));
        assertEquals(Integer.valueOf(40), t.getV40());
        assertEquals(40, t.get(39));
        assertEquals(Integer.valueOf(41), t.getV41());
        assertEquals(41, t.get(40));
        assertEquals(Integer.valueOf(42), t.getV42());
        assertEquals(42, t.get(41));
        assertEquals(Integer.valueOf(43), t.getV43());
        assertEquals(43, t.get(42));
        assertEquals(Integer.valueOf(44), t.getV44());
        assertEquals(44, t.get(43));
        assertEquals(Integer.valueOf(45), t.getV45());
        assertEquals(45, t.get(44));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple46() {
        Tuple46<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple46<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46);

        assertEquals(46, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(Integer.valueOf(29), t.getV29());
        assertEquals(29, t.get(28));
        assertEquals(Integer.valueOf(30), t.getV30());
        assertEquals(30, t.get(29));
        assertEquals(Integer.valueOf(31), t.getV31());
        assertEquals(31, t.get(30));
        assertEquals(Integer.valueOf(32), t.getV32());
        assertEquals(32, t.get(31));
        assertEquals(Integer.valueOf(33), t.getV33());
        assertEquals(33, t.get(32));
        assertEquals(Integer.valueOf(34), t.getV34());
        assertEquals(34, t.get(33));
        assertEquals(Integer.valueOf(35), t.getV35());
        assertEquals(35, t.get(34));
        assertEquals(Integer.valueOf(36), t.getV36());
        assertEquals(36, t.get(35));
        assertEquals(Integer.valueOf(37), t.getV37());
        assertEquals(37, t.get(36));
        assertEquals(Integer.valueOf(38), t.getV38());
        assertEquals(38, t.get(37));
        assertEquals(Integer.valueOf(39), t.getV39());
        assertEquals(39, t.get(38));
        assertEquals(Integer.valueOf(40), t.getV40());
        assertEquals(40, t.get(39));
        assertEquals(Integer.valueOf(41), t.getV41());
        assertEquals(41, t.get(40));
        assertEquals(Integer.valueOf(42), t.getV42());
        assertEquals(42, t.get(41));
        assertEquals(Integer.valueOf(43), t.getV43());
        assertEquals(43, t.get(42));
        assertEquals(Integer.valueOf(44), t.getV44());
        assertEquals(44, t.get(43));
        assertEquals(Integer.valueOf(45), t.getV45());
        assertEquals(45, t.get(44));
        assertEquals(Integer.valueOf(46), t.getV46());
        assertEquals(46, t.get(45));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple47() {
        Tuple47<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple47<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47);

        assertEquals(47, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(Integer.valueOf(29), t.getV29());
        assertEquals(29, t.get(28));
        assertEquals(Integer.valueOf(30), t.getV30());
        assertEquals(30, t.get(29));
        assertEquals(Integer.valueOf(31), t.getV31());
        assertEquals(31, t.get(30));
        assertEquals(Integer.valueOf(32), t.getV32());
        assertEquals(32, t.get(31));
        assertEquals(Integer.valueOf(33), t.getV33());
        assertEquals(33, t.get(32));
        assertEquals(Integer.valueOf(34), t.getV34());
        assertEquals(34, t.get(33));
        assertEquals(Integer.valueOf(35), t.getV35());
        assertEquals(35, t.get(34));
        assertEquals(Integer.valueOf(36), t.getV36());
        assertEquals(36, t.get(35));
        assertEquals(Integer.valueOf(37), t.getV37());
        assertEquals(37, t.get(36));
        assertEquals(Integer.valueOf(38), t.getV38());
        assertEquals(38, t.get(37));
        assertEquals(Integer.valueOf(39), t.getV39());
        assertEquals(39, t.get(38));
        assertEquals(Integer.valueOf(40), t.getV40());
        assertEquals(40, t.get(39));
        assertEquals(Integer.valueOf(41), t.getV41());
        assertEquals(41, t.get(40));
        assertEquals(Integer.valueOf(42), t.getV42());
        assertEquals(42, t.get(41));
        assertEquals(Integer.valueOf(43), t.getV43());
        assertEquals(43, t.get(42));
        assertEquals(Integer.valueOf(44), t.getV44());
        assertEquals(44, t.get(43));
        assertEquals(Integer.valueOf(45), t.getV45());
        assertEquals(45, t.get(44));
        assertEquals(Integer.valueOf(46), t.getV46());
        assertEquals(46, t.get(45));
        assertEquals(Integer.valueOf(47), t.getV47());
        assertEquals(47, t.get(46));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple48() {
        Tuple48<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple48<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48);

        assertEquals(48, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(Integer.valueOf(29), t.getV29());
        assertEquals(29, t.get(28));
        assertEquals(Integer.valueOf(30), t.getV30());
        assertEquals(30, t.get(29));
        assertEquals(Integer.valueOf(31), t.getV31());
        assertEquals(31, t.get(30));
        assertEquals(Integer.valueOf(32), t.getV32());
        assertEquals(32, t.get(31));
        assertEquals(Integer.valueOf(33), t.getV33());
        assertEquals(33, t.get(32));
        assertEquals(Integer.valueOf(34), t.getV34());
        assertEquals(34, t.get(33));
        assertEquals(Integer.valueOf(35), t.getV35());
        assertEquals(35, t.get(34));
        assertEquals(Integer.valueOf(36), t.getV36());
        assertEquals(36, t.get(35));
        assertEquals(Integer.valueOf(37), t.getV37());
        assertEquals(37, t.get(36));
        assertEquals(Integer.valueOf(38), t.getV38());
        assertEquals(38, t.get(37));
        assertEquals(Integer.valueOf(39), t.getV39());
        assertEquals(39, t.get(38));
        assertEquals(Integer.valueOf(40), t.getV40());
        assertEquals(40, t.get(39));
        assertEquals(Integer.valueOf(41), t.getV41());
        assertEquals(41, t.get(40));
        assertEquals(Integer.valueOf(42), t.getV42());
        assertEquals(42, t.get(41));
        assertEquals(Integer.valueOf(43), t.getV43());
        assertEquals(43, t.get(42));
        assertEquals(Integer.valueOf(44), t.getV44());
        assertEquals(44, t.get(43));
        assertEquals(Integer.valueOf(45), t.getV45());
        assertEquals(45, t.get(44));
        assertEquals(Integer.valueOf(46), t.getV46());
        assertEquals(46, t.get(45));
        assertEquals(Integer.valueOf(47), t.getV47());
        assertEquals(47, t.get(46));
        assertEquals(Integer.valueOf(48), t.getV48());
        assertEquals(48, t.get(47));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple49() {
        Tuple49<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple49<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49);

        assertEquals(49, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(Integer.valueOf(29), t.getV29());
        assertEquals(29, t.get(28));
        assertEquals(Integer.valueOf(30), t.getV30());
        assertEquals(30, t.get(29));
        assertEquals(Integer.valueOf(31), t.getV31());
        assertEquals(31, t.get(30));
        assertEquals(Integer.valueOf(32), t.getV32());
        assertEquals(32, t.get(31));
        assertEquals(Integer.valueOf(33), t.getV33());
        assertEquals(33, t.get(32));
        assertEquals(Integer.valueOf(34), t.getV34());
        assertEquals(34, t.get(33));
        assertEquals(Integer.valueOf(35), t.getV35());
        assertEquals(35, t.get(34));
        assertEquals(Integer.valueOf(36), t.getV36());
        assertEquals(36, t.get(35));
        assertEquals(Integer.valueOf(37), t.getV37());
        assertEquals(37, t.get(36));
        assertEquals(Integer.valueOf(38), t.getV38());
        assertEquals(38, t.get(37));
        assertEquals(Integer.valueOf(39), t.getV39());
        assertEquals(39, t.get(38));
        assertEquals(Integer.valueOf(40), t.getV40());
        assertEquals(40, t.get(39));
        assertEquals(Integer.valueOf(41), t.getV41());
        assertEquals(41, t.get(40));
        assertEquals(Integer.valueOf(42), t.getV42());
        assertEquals(42, t.get(41));
        assertEquals(Integer.valueOf(43), t.getV43());
        assertEquals(43, t.get(42));
        assertEquals(Integer.valueOf(44), t.getV44());
        assertEquals(44, t.get(43));
        assertEquals(Integer.valueOf(45), t.getV45());
        assertEquals(45, t.get(44));
        assertEquals(Integer.valueOf(46), t.getV46());
        assertEquals(46, t.get(45));
        assertEquals(Integer.valueOf(47), t.getV47());
        assertEquals(47, t.get(46));
        assertEquals(Integer.valueOf(48), t.getV48());
        assertEquals(48, t.get(47));
        assertEquals(Integer.valueOf(49), t.getV49());
        assertEquals(49, t.get(48));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple50() {
        Tuple50<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple50<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50);

        assertEquals(50, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(Integer.valueOf(29), t.getV29());
        assertEquals(29, t.get(28));
        assertEquals(Integer.valueOf(30), t.getV30());
        assertEquals(30, t.get(29));
        assertEquals(Integer.valueOf(31), t.getV31());
        assertEquals(31, t.get(30));
        assertEquals(Integer.valueOf(32), t.getV32());
        assertEquals(32, t.get(31));
        assertEquals(Integer.valueOf(33), t.getV33());
        assertEquals(33, t.get(32));
        assertEquals(Integer.valueOf(34), t.getV34());
        assertEquals(34, t.get(33));
        assertEquals(Integer.valueOf(35), t.getV35());
        assertEquals(35, t.get(34));
        assertEquals(Integer.valueOf(36), t.getV36());
        assertEquals(36, t.get(35));
        assertEquals(Integer.valueOf(37), t.getV37());
        assertEquals(37, t.get(36));
        assertEquals(Integer.valueOf(38), t.getV38());
        assertEquals(38, t.get(37));
        assertEquals(Integer.valueOf(39), t.getV39());
        assertEquals(39, t.get(38));
        assertEquals(Integer.valueOf(40), t.getV40());
        assertEquals(40, t.get(39));
        assertEquals(Integer.valueOf(41), t.getV41());
        assertEquals(41, t.get(40));
        assertEquals(Integer.valueOf(42), t.getV42());
        assertEquals(42, t.get(41));
        assertEquals(Integer.valueOf(43), t.getV43());
        assertEquals(43, t.get(42));
        assertEquals(Integer.valueOf(44), t.getV44());
        assertEquals(44, t.get(43));
        assertEquals(Integer.valueOf(45), t.getV45());
        assertEquals(45, t.get(44));
        assertEquals(Integer.valueOf(46), t.getV46());
        assertEquals(46, t.get(45));
        assertEquals(Integer.valueOf(47), t.getV47());
        assertEquals(47, t.get(46));
        assertEquals(Integer.valueOf(48), t.getV48());
        assertEquals(48, t.get(47));
        assertEquals(Integer.valueOf(49), t.getV49());
        assertEquals(49, t.get(48));
        assertEquals(Integer.valueOf(50), t.getV50());
        assertEquals(50, t.get(49));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple51() {
        Tuple51<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple51<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51);

        assertEquals(51, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(Integer.valueOf(29), t.getV29());
        assertEquals(29, t.get(28));
        assertEquals(Integer.valueOf(30), t.getV30());
        assertEquals(30, t.get(29));
        assertEquals(Integer.valueOf(31), t.getV31());
        assertEquals(31, t.get(30));
        assertEquals(Integer.valueOf(32), t.getV32());
        assertEquals(32, t.get(31));
        assertEquals(Integer.valueOf(33), t.getV33());
        assertEquals(33, t.get(32));
        assertEquals(Integer.valueOf(34), t.getV34());
        assertEquals(34, t.get(33));
        assertEquals(Integer.valueOf(35), t.getV35());
        assertEquals(35, t.get(34));
        assertEquals(Integer.valueOf(36), t.getV36());
        assertEquals(36, t.get(35));
        assertEquals(Integer.valueOf(37), t.getV37());
        assertEquals(37, t.get(36));
        assertEquals(Integer.valueOf(38), t.getV38());
        assertEquals(38, t.get(37));
        assertEquals(Integer.valueOf(39), t.getV39());
        assertEquals(39, t.get(38));
        assertEquals(Integer.valueOf(40), t.getV40());
        assertEquals(40, t.get(39));
        assertEquals(Integer.valueOf(41), t.getV41());
        assertEquals(41, t.get(40));
        assertEquals(Integer.valueOf(42), t.getV42());
        assertEquals(42, t.get(41));
        assertEquals(Integer.valueOf(43), t.getV43());
        assertEquals(43, t.get(42));
        assertEquals(Integer.valueOf(44), t.getV44());
        assertEquals(44, t.get(43));
        assertEquals(Integer.valueOf(45), t.getV45());
        assertEquals(45, t.get(44));
        assertEquals(Integer.valueOf(46), t.getV46());
        assertEquals(46, t.get(45));
        assertEquals(Integer.valueOf(47), t.getV47());
        assertEquals(47, t.get(46));
        assertEquals(Integer.valueOf(48), t.getV48());
        assertEquals(48, t.get(47));
        assertEquals(Integer.valueOf(49), t.getV49());
        assertEquals(49, t.get(48));
        assertEquals(Integer.valueOf(50), t.getV50());
        assertEquals(50, t.get(49));
        assertEquals(Integer.valueOf(51), t.getV51());
        assertEquals(51, t.get(50));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple52() {
        Tuple52<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple52<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52);

        assertEquals(52, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(Integer.valueOf(29), t.getV29());
        assertEquals(29, t.get(28));
        assertEquals(Integer.valueOf(30), t.getV30());
        assertEquals(30, t.get(29));
        assertEquals(Integer.valueOf(31), t.getV31());
        assertEquals(31, t.get(30));
        assertEquals(Integer.valueOf(32), t.getV32());
        assertEquals(32, t.get(31));
        assertEquals(Integer.valueOf(33), t.getV33());
        assertEquals(33, t.get(32));
        assertEquals(Integer.valueOf(34), t.getV34());
        assertEquals(34, t.get(33));
        assertEquals(Integer.valueOf(35), t.getV35());
        assertEquals(35, t.get(34));
        assertEquals(Integer.valueOf(36), t.getV36());
        assertEquals(36, t.get(35));
        assertEquals(Integer.valueOf(37), t.getV37());
        assertEquals(37, t.get(36));
        assertEquals(Integer.valueOf(38), t.getV38());
        assertEquals(38, t.get(37));
        assertEquals(Integer.valueOf(39), t.getV39());
        assertEquals(39, t.get(38));
        assertEquals(Integer.valueOf(40), t.getV40());
        assertEquals(40, t.get(39));
        assertEquals(Integer.valueOf(41), t.getV41());
        assertEquals(41, t.get(40));
        assertEquals(Integer.valueOf(42), t.getV42());
        assertEquals(42, t.get(41));
        assertEquals(Integer.valueOf(43), t.getV43());
        assertEquals(43, t.get(42));
        assertEquals(Integer.valueOf(44), t.getV44());
        assertEquals(44, t.get(43));
        assertEquals(Integer.valueOf(45), t.getV45());
        assertEquals(45, t.get(44));
        assertEquals(Integer.valueOf(46), t.getV46());
        assertEquals(46, t.get(45));
        assertEquals(Integer.valueOf(47), t.getV47());
        assertEquals(47, t.get(46));
        assertEquals(Integer.valueOf(48), t.getV48());
        assertEquals(48, t.get(47));
        assertEquals(Integer.valueOf(49), t.getV49());
        assertEquals(49, t.get(48));
        assertEquals(Integer.valueOf(50), t.getV50());
        assertEquals(50, t.get(49));
        assertEquals(Integer.valueOf(51), t.getV51());
        assertEquals(51, t.get(50));
        assertEquals(Integer.valueOf(52), t.getV52());
        assertEquals(52, t.get(51));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple53() {
        Tuple53<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple53<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53);

        assertEquals(53, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(Integer.valueOf(29), t.getV29());
        assertEquals(29, t.get(28));
        assertEquals(Integer.valueOf(30), t.getV30());
        assertEquals(30, t.get(29));
        assertEquals(Integer.valueOf(31), t.getV31());
        assertEquals(31, t.get(30));
        assertEquals(Integer.valueOf(32), t.getV32());
        assertEquals(32, t.get(31));
        assertEquals(Integer.valueOf(33), t.getV33());
        assertEquals(33, t.get(32));
        assertEquals(Integer.valueOf(34), t.getV34());
        assertEquals(34, t.get(33));
        assertEquals(Integer.valueOf(35), t.getV35());
        assertEquals(35, t.get(34));
        assertEquals(Integer.valueOf(36), t.getV36());
        assertEquals(36, t.get(35));
        assertEquals(Integer.valueOf(37), t.getV37());
        assertEquals(37, t.get(36));
        assertEquals(Integer.valueOf(38), t.getV38());
        assertEquals(38, t.get(37));
        assertEquals(Integer.valueOf(39), t.getV39());
        assertEquals(39, t.get(38));
        assertEquals(Integer.valueOf(40), t.getV40());
        assertEquals(40, t.get(39));
        assertEquals(Integer.valueOf(41), t.getV41());
        assertEquals(41, t.get(40));
        assertEquals(Integer.valueOf(42), t.getV42());
        assertEquals(42, t.get(41));
        assertEquals(Integer.valueOf(43), t.getV43());
        assertEquals(43, t.get(42));
        assertEquals(Integer.valueOf(44), t.getV44());
        assertEquals(44, t.get(43));
        assertEquals(Integer.valueOf(45), t.getV45());
        assertEquals(45, t.get(44));
        assertEquals(Integer.valueOf(46), t.getV46());
        assertEquals(46, t.get(45));
        assertEquals(Integer.valueOf(47), t.getV47());
        assertEquals(47, t.get(46));
        assertEquals(Integer.valueOf(48), t.getV48());
        assertEquals(48, t.get(47));
        assertEquals(Integer.valueOf(49), t.getV49());
        assertEquals(49, t.get(48));
        assertEquals(Integer.valueOf(50), t.getV50());
        assertEquals(50, t.get(49));
        assertEquals(Integer.valueOf(51), t.getV51());
        assertEquals(51, t.get(50));
        assertEquals(Integer.valueOf(52), t.getV52());
        assertEquals(52, t.get(51));
        assertEquals(Integer.valueOf(53), t.getV53());
        assertEquals(53, t.get(52));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple54() {
        Tuple54<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple54<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54);

        assertEquals(54, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(Integer.valueOf(29), t.getV29());
        assertEquals(29, t.get(28));
        assertEquals(Integer.valueOf(30), t.getV30());
        assertEquals(30, t.get(29));
        assertEquals(Integer.valueOf(31), t.getV31());
        assertEquals(31, t.get(30));
        assertEquals(Integer.valueOf(32), t.getV32());
        assertEquals(32, t.get(31));
        assertEquals(Integer.valueOf(33), t.getV33());
        assertEquals(33, t.get(32));
        assertEquals(Integer.valueOf(34), t.getV34());
        assertEquals(34, t.get(33));
        assertEquals(Integer.valueOf(35), t.getV35());
        assertEquals(35, t.get(34));
        assertEquals(Integer.valueOf(36), t.getV36());
        assertEquals(36, t.get(35));
        assertEquals(Integer.valueOf(37), t.getV37());
        assertEquals(37, t.get(36));
        assertEquals(Integer.valueOf(38), t.getV38());
        assertEquals(38, t.get(37));
        assertEquals(Integer.valueOf(39), t.getV39());
        assertEquals(39, t.get(38));
        assertEquals(Integer.valueOf(40), t.getV40());
        assertEquals(40, t.get(39));
        assertEquals(Integer.valueOf(41), t.getV41());
        assertEquals(41, t.get(40));
        assertEquals(Integer.valueOf(42), t.getV42());
        assertEquals(42, t.get(41));
        assertEquals(Integer.valueOf(43), t.getV43());
        assertEquals(43, t.get(42));
        assertEquals(Integer.valueOf(44), t.getV44());
        assertEquals(44, t.get(43));
        assertEquals(Integer.valueOf(45), t.getV45());
        assertEquals(45, t.get(44));
        assertEquals(Integer.valueOf(46), t.getV46());
        assertEquals(46, t.get(45));
        assertEquals(Integer.valueOf(47), t.getV47());
        assertEquals(47, t.get(46));
        assertEquals(Integer.valueOf(48), t.getV48());
        assertEquals(48, t.get(47));
        assertEquals(Integer.valueOf(49), t.getV49());
        assertEquals(49, t.get(48));
        assertEquals(Integer.valueOf(50), t.getV50());
        assertEquals(50, t.get(49));
        assertEquals(Integer.valueOf(51), t.getV51());
        assertEquals(51, t.get(50));
        assertEquals(Integer.valueOf(52), t.getV52());
        assertEquals(52, t.get(51));
        assertEquals(Integer.valueOf(53), t.getV53());
        assertEquals(53, t.get(52));
        assertEquals(Integer.valueOf(54), t.getV54());
        assertEquals(54, t.get(53));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple55() {
        Tuple55<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple55<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55);

        assertEquals(55, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(Integer.valueOf(29), t.getV29());
        assertEquals(29, t.get(28));
        assertEquals(Integer.valueOf(30), t.getV30());
        assertEquals(30, t.get(29));
        assertEquals(Integer.valueOf(31), t.getV31());
        assertEquals(31, t.get(30));
        assertEquals(Integer.valueOf(32), t.getV32());
        assertEquals(32, t.get(31));
        assertEquals(Integer.valueOf(33), t.getV33());
        assertEquals(33, t.get(32));
        assertEquals(Integer.valueOf(34), t.getV34());
        assertEquals(34, t.get(33));
        assertEquals(Integer.valueOf(35), t.getV35());
        assertEquals(35, t.get(34));
        assertEquals(Integer.valueOf(36), t.getV36());
        assertEquals(36, t.get(35));
        assertEquals(Integer.valueOf(37), t.getV37());
        assertEquals(37, t.get(36));
        assertEquals(Integer.valueOf(38), t.getV38());
        assertEquals(38, t.get(37));
        assertEquals(Integer.valueOf(39), t.getV39());
        assertEquals(39, t.get(38));
        assertEquals(Integer.valueOf(40), t.getV40());
        assertEquals(40, t.get(39));
        assertEquals(Integer.valueOf(41), t.getV41());
        assertEquals(41, t.get(40));
        assertEquals(Integer.valueOf(42), t.getV42());
        assertEquals(42, t.get(41));
        assertEquals(Integer.valueOf(43), t.getV43());
        assertEquals(43, t.get(42));
        assertEquals(Integer.valueOf(44), t.getV44());
        assertEquals(44, t.get(43));
        assertEquals(Integer.valueOf(45), t.getV45());
        assertEquals(45, t.get(44));
        assertEquals(Integer.valueOf(46), t.getV46());
        assertEquals(46, t.get(45));
        assertEquals(Integer.valueOf(47), t.getV47());
        assertEquals(47, t.get(46));
        assertEquals(Integer.valueOf(48), t.getV48());
        assertEquals(48, t.get(47));
        assertEquals(Integer.valueOf(49), t.getV49());
        assertEquals(49, t.get(48));
        assertEquals(Integer.valueOf(50), t.getV50());
        assertEquals(50, t.get(49));
        assertEquals(Integer.valueOf(51), t.getV51());
        assertEquals(51, t.get(50));
        assertEquals(Integer.valueOf(52), t.getV52());
        assertEquals(52, t.get(51));
        assertEquals(Integer.valueOf(53), t.getV53());
        assertEquals(53, t.get(52));
        assertEquals(Integer.valueOf(54), t.getV54());
        assertEquals(54, t.get(53));
        assertEquals(Integer.valueOf(55), t.getV55());
        assertEquals(55, t.get(54));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple56() {
        Tuple56<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple56<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56);

        assertEquals(56, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(Integer.valueOf(29), t.getV29());
        assertEquals(29, t.get(28));
        assertEquals(Integer.valueOf(30), t.getV30());
        assertEquals(30, t.get(29));
        assertEquals(Integer.valueOf(31), t.getV31());
        assertEquals(31, t.get(30));
        assertEquals(Integer.valueOf(32), t.getV32());
        assertEquals(32, t.get(31));
        assertEquals(Integer.valueOf(33), t.getV33());
        assertEquals(33, t.get(32));
        assertEquals(Integer.valueOf(34), t.getV34());
        assertEquals(34, t.get(33));
        assertEquals(Integer.valueOf(35), t.getV35());
        assertEquals(35, t.get(34));
        assertEquals(Integer.valueOf(36), t.getV36());
        assertEquals(36, t.get(35));
        assertEquals(Integer.valueOf(37), t.getV37());
        assertEquals(37, t.get(36));
        assertEquals(Integer.valueOf(38), t.getV38());
        assertEquals(38, t.get(37));
        assertEquals(Integer.valueOf(39), t.getV39());
        assertEquals(39, t.get(38));
        assertEquals(Integer.valueOf(40), t.getV40());
        assertEquals(40, t.get(39));
        assertEquals(Integer.valueOf(41), t.getV41());
        assertEquals(41, t.get(40));
        assertEquals(Integer.valueOf(42), t.getV42());
        assertEquals(42, t.get(41));
        assertEquals(Integer.valueOf(43), t.getV43());
        assertEquals(43, t.get(42));
        assertEquals(Integer.valueOf(44), t.getV44());
        assertEquals(44, t.get(43));
        assertEquals(Integer.valueOf(45), t.getV45());
        assertEquals(45, t.get(44));
        assertEquals(Integer.valueOf(46), t.getV46());
        assertEquals(46, t.get(45));
        assertEquals(Integer.valueOf(47), t.getV47());
        assertEquals(47, t.get(46));
        assertEquals(Integer.valueOf(48), t.getV48());
        assertEquals(48, t.get(47));
        assertEquals(Integer.valueOf(49), t.getV49());
        assertEquals(49, t.get(48));
        assertEquals(Integer.valueOf(50), t.getV50());
        assertEquals(50, t.get(49));
        assertEquals(Integer.valueOf(51), t.getV51());
        assertEquals(51, t.get(50));
        assertEquals(Integer.valueOf(52), t.getV52());
        assertEquals(52, t.get(51));
        assertEquals(Integer.valueOf(53), t.getV53());
        assertEquals(53, t.get(52));
        assertEquals(Integer.valueOf(54), t.getV54());
        assertEquals(54, t.get(53));
        assertEquals(Integer.valueOf(55), t.getV55());
        assertEquals(55, t.get(54));
        assertEquals(Integer.valueOf(56), t.getV56());
        assertEquals(56, t.get(55));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple57() {
        Tuple57<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple57<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57);

        assertEquals(57, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(Integer.valueOf(29), t.getV29());
        assertEquals(29, t.get(28));
        assertEquals(Integer.valueOf(30), t.getV30());
        assertEquals(30, t.get(29));
        assertEquals(Integer.valueOf(31), t.getV31());
        assertEquals(31, t.get(30));
        assertEquals(Integer.valueOf(32), t.getV32());
        assertEquals(32, t.get(31));
        assertEquals(Integer.valueOf(33), t.getV33());
        assertEquals(33, t.get(32));
        assertEquals(Integer.valueOf(34), t.getV34());
        assertEquals(34, t.get(33));
        assertEquals(Integer.valueOf(35), t.getV35());
        assertEquals(35, t.get(34));
        assertEquals(Integer.valueOf(36), t.getV36());
        assertEquals(36, t.get(35));
        assertEquals(Integer.valueOf(37), t.getV37());
        assertEquals(37, t.get(36));
        assertEquals(Integer.valueOf(38), t.getV38());
        assertEquals(38, t.get(37));
        assertEquals(Integer.valueOf(39), t.getV39());
        assertEquals(39, t.get(38));
        assertEquals(Integer.valueOf(40), t.getV40());
        assertEquals(40, t.get(39));
        assertEquals(Integer.valueOf(41), t.getV41());
        assertEquals(41, t.get(40));
        assertEquals(Integer.valueOf(42), t.getV42());
        assertEquals(42, t.get(41));
        assertEquals(Integer.valueOf(43), t.getV43());
        assertEquals(43, t.get(42));
        assertEquals(Integer.valueOf(44), t.getV44());
        assertEquals(44, t.get(43));
        assertEquals(Integer.valueOf(45), t.getV45());
        assertEquals(45, t.get(44));
        assertEquals(Integer.valueOf(46), t.getV46());
        assertEquals(46, t.get(45));
        assertEquals(Integer.valueOf(47), t.getV47());
        assertEquals(47, t.get(46));
        assertEquals(Integer.valueOf(48), t.getV48());
        assertEquals(48, t.get(47));
        assertEquals(Integer.valueOf(49), t.getV49());
        assertEquals(49, t.get(48));
        assertEquals(Integer.valueOf(50), t.getV50());
        assertEquals(50, t.get(49));
        assertEquals(Integer.valueOf(51), t.getV51());
        assertEquals(51, t.get(50));
        assertEquals(Integer.valueOf(52), t.getV52());
        assertEquals(52, t.get(51));
        assertEquals(Integer.valueOf(53), t.getV53());
        assertEquals(53, t.get(52));
        assertEquals(Integer.valueOf(54), t.getV54());
        assertEquals(54, t.get(53));
        assertEquals(Integer.valueOf(55), t.getV55());
        assertEquals(55, t.get(54));
        assertEquals(Integer.valueOf(56), t.getV56());
        assertEquals(56, t.get(55));
        assertEquals(Integer.valueOf(57), t.getV57());
        assertEquals(57, t.get(56));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple58() {
        Tuple58<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple58<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58);

        assertEquals(58, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(Integer.valueOf(29), t.getV29());
        assertEquals(29, t.get(28));
        assertEquals(Integer.valueOf(30), t.getV30());
        assertEquals(30, t.get(29));
        assertEquals(Integer.valueOf(31), t.getV31());
        assertEquals(31, t.get(30));
        assertEquals(Integer.valueOf(32), t.getV32());
        assertEquals(32, t.get(31));
        assertEquals(Integer.valueOf(33), t.getV33());
        assertEquals(33, t.get(32));
        assertEquals(Integer.valueOf(34), t.getV34());
        assertEquals(34, t.get(33));
        assertEquals(Integer.valueOf(35), t.getV35());
        assertEquals(35, t.get(34));
        assertEquals(Integer.valueOf(36), t.getV36());
        assertEquals(36, t.get(35));
        assertEquals(Integer.valueOf(37), t.getV37());
        assertEquals(37, t.get(36));
        assertEquals(Integer.valueOf(38), t.getV38());
        assertEquals(38, t.get(37));
        assertEquals(Integer.valueOf(39), t.getV39());
        assertEquals(39, t.get(38));
        assertEquals(Integer.valueOf(40), t.getV40());
        assertEquals(40, t.get(39));
        assertEquals(Integer.valueOf(41), t.getV41());
        assertEquals(41, t.get(40));
        assertEquals(Integer.valueOf(42), t.getV42());
        assertEquals(42, t.get(41));
        assertEquals(Integer.valueOf(43), t.getV43());
        assertEquals(43, t.get(42));
        assertEquals(Integer.valueOf(44), t.getV44());
        assertEquals(44, t.get(43));
        assertEquals(Integer.valueOf(45), t.getV45());
        assertEquals(45, t.get(44));
        assertEquals(Integer.valueOf(46), t.getV46());
        assertEquals(46, t.get(45));
        assertEquals(Integer.valueOf(47), t.getV47());
        assertEquals(47, t.get(46));
        assertEquals(Integer.valueOf(48), t.getV48());
        assertEquals(48, t.get(47));
        assertEquals(Integer.valueOf(49), t.getV49());
        assertEquals(49, t.get(48));
        assertEquals(Integer.valueOf(50), t.getV50());
        assertEquals(50, t.get(49));
        assertEquals(Integer.valueOf(51), t.getV51());
        assertEquals(51, t.get(50));
        assertEquals(Integer.valueOf(52), t.getV52());
        assertEquals(52, t.get(51));
        assertEquals(Integer.valueOf(53), t.getV53());
        assertEquals(53, t.get(52));
        assertEquals(Integer.valueOf(54), t.getV54());
        assertEquals(54, t.get(53));
        assertEquals(Integer.valueOf(55), t.getV55());
        assertEquals(55, t.get(54));
        assertEquals(Integer.valueOf(56), t.getV56());
        assertEquals(56, t.get(55));
        assertEquals(Integer.valueOf(57), t.getV57());
        assertEquals(57, t.get(56));
        assertEquals(Integer.valueOf(58), t.getV58());
        assertEquals(58, t.get(57));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple59() {
        Tuple59<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple59<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59);

        assertEquals(59, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(Integer.valueOf(29), t.getV29());
        assertEquals(29, t.get(28));
        assertEquals(Integer.valueOf(30), t.getV30());
        assertEquals(30, t.get(29));
        assertEquals(Integer.valueOf(31), t.getV31());
        assertEquals(31, t.get(30));
        assertEquals(Integer.valueOf(32), t.getV32());
        assertEquals(32, t.get(31));
        assertEquals(Integer.valueOf(33), t.getV33());
        assertEquals(33, t.get(32));
        assertEquals(Integer.valueOf(34), t.getV34());
        assertEquals(34, t.get(33));
        assertEquals(Integer.valueOf(35), t.getV35());
        assertEquals(35, t.get(34));
        assertEquals(Integer.valueOf(36), t.getV36());
        assertEquals(36, t.get(35));
        assertEquals(Integer.valueOf(37), t.getV37());
        assertEquals(37, t.get(36));
        assertEquals(Integer.valueOf(38), t.getV38());
        assertEquals(38, t.get(37));
        assertEquals(Integer.valueOf(39), t.getV39());
        assertEquals(39, t.get(38));
        assertEquals(Integer.valueOf(40), t.getV40());
        assertEquals(40, t.get(39));
        assertEquals(Integer.valueOf(41), t.getV41());
        assertEquals(41, t.get(40));
        assertEquals(Integer.valueOf(42), t.getV42());
        assertEquals(42, t.get(41));
        assertEquals(Integer.valueOf(43), t.getV43());
        assertEquals(43, t.get(42));
        assertEquals(Integer.valueOf(44), t.getV44());
        assertEquals(44, t.get(43));
        assertEquals(Integer.valueOf(45), t.getV45());
        assertEquals(45, t.get(44));
        assertEquals(Integer.valueOf(46), t.getV46());
        assertEquals(46, t.get(45));
        assertEquals(Integer.valueOf(47), t.getV47());
        assertEquals(47, t.get(46));
        assertEquals(Integer.valueOf(48), t.getV48());
        assertEquals(48, t.get(47));
        assertEquals(Integer.valueOf(49), t.getV49());
        assertEquals(49, t.get(48));
        assertEquals(Integer.valueOf(50), t.getV50());
        assertEquals(50, t.get(49));
        assertEquals(Integer.valueOf(51), t.getV51());
        assertEquals(51, t.get(50));
        assertEquals(Integer.valueOf(52), t.getV52());
        assertEquals(52, t.get(51));
        assertEquals(Integer.valueOf(53), t.getV53());
        assertEquals(53, t.get(52));
        assertEquals(Integer.valueOf(54), t.getV54());
        assertEquals(54, t.get(53));
        assertEquals(Integer.valueOf(55), t.getV55());
        assertEquals(55, t.get(54));
        assertEquals(Integer.valueOf(56), t.getV56());
        assertEquals(56, t.get(55));
        assertEquals(Integer.valueOf(57), t.getV57());
        assertEquals(57, t.get(56));
        assertEquals(Integer.valueOf(58), t.getV58());
        assertEquals(58, t.get(57));
        assertEquals(Integer.valueOf(59), t.getV59());
        assertEquals(59, t.get(58));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple60() {
        Tuple60<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple60<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60);

        assertEquals(60, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(Integer.valueOf(29), t.getV29());
        assertEquals(29, t.get(28));
        assertEquals(Integer.valueOf(30), t.getV30());
        assertEquals(30, t.get(29));
        assertEquals(Integer.valueOf(31), t.getV31());
        assertEquals(31, t.get(30));
        assertEquals(Integer.valueOf(32), t.getV32());
        assertEquals(32, t.get(31));
        assertEquals(Integer.valueOf(33), t.getV33());
        assertEquals(33, t.get(32));
        assertEquals(Integer.valueOf(34), t.getV34());
        assertEquals(34, t.get(33));
        assertEquals(Integer.valueOf(35), t.getV35());
        assertEquals(35, t.get(34));
        assertEquals(Integer.valueOf(36), t.getV36());
        assertEquals(36, t.get(35));
        assertEquals(Integer.valueOf(37), t.getV37());
        assertEquals(37, t.get(36));
        assertEquals(Integer.valueOf(38), t.getV38());
        assertEquals(38, t.get(37));
        assertEquals(Integer.valueOf(39), t.getV39());
        assertEquals(39, t.get(38));
        assertEquals(Integer.valueOf(40), t.getV40());
        assertEquals(40, t.get(39));
        assertEquals(Integer.valueOf(41), t.getV41());
        assertEquals(41, t.get(40));
        assertEquals(Integer.valueOf(42), t.getV42());
        assertEquals(42, t.get(41));
        assertEquals(Integer.valueOf(43), t.getV43());
        assertEquals(43, t.get(42));
        assertEquals(Integer.valueOf(44), t.getV44());
        assertEquals(44, t.get(43));
        assertEquals(Integer.valueOf(45), t.getV45());
        assertEquals(45, t.get(44));
        assertEquals(Integer.valueOf(46), t.getV46());
        assertEquals(46, t.get(45));
        assertEquals(Integer.valueOf(47), t.getV47());
        assertEquals(47, t.get(46));
        assertEquals(Integer.valueOf(48), t.getV48());
        assertEquals(48, t.get(47));
        assertEquals(Integer.valueOf(49), t.getV49());
        assertEquals(49, t.get(48));
        assertEquals(Integer.valueOf(50), t.getV50());
        assertEquals(50, t.get(49));
        assertEquals(Integer.valueOf(51), t.getV51());
        assertEquals(51, t.get(50));
        assertEquals(Integer.valueOf(52), t.getV52());
        assertEquals(52, t.get(51));
        assertEquals(Integer.valueOf(53), t.getV53());
        assertEquals(53, t.get(52));
        assertEquals(Integer.valueOf(54), t.getV54());
        assertEquals(54, t.get(53));
        assertEquals(Integer.valueOf(55), t.getV55());
        assertEquals(55, t.get(54));
        assertEquals(Integer.valueOf(56), t.getV56());
        assertEquals(56, t.get(55));
        assertEquals(Integer.valueOf(57), t.getV57());
        assertEquals(57, t.get(56));
        assertEquals(Integer.valueOf(58), t.getV58());
        assertEquals(58, t.get(57));
        assertEquals(Integer.valueOf(59), t.getV59());
        assertEquals(59, t.get(58));
        assertEquals(Integer.valueOf(60), t.getV60());
        assertEquals(60, t.get(59));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple61() {
        Tuple61<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple61<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61);

        assertEquals(61, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(Integer.valueOf(29), t.getV29());
        assertEquals(29, t.get(28));
        assertEquals(Integer.valueOf(30), t.getV30());
        assertEquals(30, t.get(29));
        assertEquals(Integer.valueOf(31), t.getV31());
        assertEquals(31, t.get(30));
        assertEquals(Integer.valueOf(32), t.getV32());
        assertEquals(32, t.get(31));
        assertEquals(Integer.valueOf(33), t.getV33());
        assertEquals(33, t.get(32));
        assertEquals(Integer.valueOf(34), t.getV34());
        assertEquals(34, t.get(33));
        assertEquals(Integer.valueOf(35), t.getV35());
        assertEquals(35, t.get(34));
        assertEquals(Integer.valueOf(36), t.getV36());
        assertEquals(36, t.get(35));
        assertEquals(Integer.valueOf(37), t.getV37());
        assertEquals(37, t.get(36));
        assertEquals(Integer.valueOf(38), t.getV38());
        assertEquals(38, t.get(37));
        assertEquals(Integer.valueOf(39), t.getV39());
        assertEquals(39, t.get(38));
        assertEquals(Integer.valueOf(40), t.getV40());
        assertEquals(40, t.get(39));
        assertEquals(Integer.valueOf(41), t.getV41());
        assertEquals(41, t.get(40));
        assertEquals(Integer.valueOf(42), t.getV42());
        assertEquals(42, t.get(41));
        assertEquals(Integer.valueOf(43), t.getV43());
        assertEquals(43, t.get(42));
        assertEquals(Integer.valueOf(44), t.getV44());
        assertEquals(44, t.get(43));
        assertEquals(Integer.valueOf(45), t.getV45());
        assertEquals(45, t.get(44));
        assertEquals(Integer.valueOf(46), t.getV46());
        assertEquals(46, t.get(45));
        assertEquals(Integer.valueOf(47), t.getV47());
        assertEquals(47, t.get(46));
        assertEquals(Integer.valueOf(48), t.getV48());
        assertEquals(48, t.get(47));
        assertEquals(Integer.valueOf(49), t.getV49());
        assertEquals(49, t.get(48));
        assertEquals(Integer.valueOf(50), t.getV50());
        assertEquals(50, t.get(49));
        assertEquals(Integer.valueOf(51), t.getV51());
        assertEquals(51, t.get(50));
        assertEquals(Integer.valueOf(52), t.getV52());
        assertEquals(52, t.get(51));
        assertEquals(Integer.valueOf(53), t.getV53());
        assertEquals(53, t.get(52));
        assertEquals(Integer.valueOf(54), t.getV54());
        assertEquals(54, t.get(53));
        assertEquals(Integer.valueOf(55), t.getV55());
        assertEquals(55, t.get(54));
        assertEquals(Integer.valueOf(56), t.getV56());
        assertEquals(56, t.get(55));
        assertEquals(Integer.valueOf(57), t.getV57());
        assertEquals(57, t.get(56));
        assertEquals(Integer.valueOf(58), t.getV58());
        assertEquals(58, t.get(57));
        assertEquals(Integer.valueOf(59), t.getV59());
        assertEquals(59, t.get(58));
        assertEquals(Integer.valueOf(60), t.getV60());
        assertEquals(60, t.get(59));
        assertEquals(Integer.valueOf(61), t.getV61());
        assertEquals(61, t.get(60));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple62() {
        Tuple62<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple62<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62);

        assertEquals(62, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(Integer.valueOf(29), t.getV29());
        assertEquals(29, t.get(28));
        assertEquals(Integer.valueOf(30), t.getV30());
        assertEquals(30, t.get(29));
        assertEquals(Integer.valueOf(31), t.getV31());
        assertEquals(31, t.get(30));
        assertEquals(Integer.valueOf(32), t.getV32());
        assertEquals(32, t.get(31));
        assertEquals(Integer.valueOf(33), t.getV33());
        assertEquals(33, t.get(32));
        assertEquals(Integer.valueOf(34), t.getV34());
        assertEquals(34, t.get(33));
        assertEquals(Integer.valueOf(35), t.getV35());
        assertEquals(35, t.get(34));
        assertEquals(Integer.valueOf(36), t.getV36());
        assertEquals(36, t.get(35));
        assertEquals(Integer.valueOf(37), t.getV37());
        assertEquals(37, t.get(36));
        assertEquals(Integer.valueOf(38), t.getV38());
        assertEquals(38, t.get(37));
        assertEquals(Integer.valueOf(39), t.getV39());
        assertEquals(39, t.get(38));
        assertEquals(Integer.valueOf(40), t.getV40());
        assertEquals(40, t.get(39));
        assertEquals(Integer.valueOf(41), t.getV41());
        assertEquals(41, t.get(40));
        assertEquals(Integer.valueOf(42), t.getV42());
        assertEquals(42, t.get(41));
        assertEquals(Integer.valueOf(43), t.getV43());
        assertEquals(43, t.get(42));
        assertEquals(Integer.valueOf(44), t.getV44());
        assertEquals(44, t.get(43));
        assertEquals(Integer.valueOf(45), t.getV45());
        assertEquals(45, t.get(44));
        assertEquals(Integer.valueOf(46), t.getV46());
        assertEquals(46, t.get(45));
        assertEquals(Integer.valueOf(47), t.getV47());
        assertEquals(47, t.get(46));
        assertEquals(Integer.valueOf(48), t.getV48());
        assertEquals(48, t.get(47));
        assertEquals(Integer.valueOf(49), t.getV49());
        assertEquals(49, t.get(48));
        assertEquals(Integer.valueOf(50), t.getV50());
        assertEquals(50, t.get(49));
        assertEquals(Integer.valueOf(51), t.getV51());
        assertEquals(51, t.get(50));
        assertEquals(Integer.valueOf(52), t.getV52());
        assertEquals(52, t.get(51));
        assertEquals(Integer.valueOf(53), t.getV53());
        assertEquals(53, t.get(52));
        assertEquals(Integer.valueOf(54), t.getV54());
        assertEquals(54, t.get(53));
        assertEquals(Integer.valueOf(55), t.getV55());
        assertEquals(55, t.get(54));
        assertEquals(Integer.valueOf(56), t.getV56());
        assertEquals(56, t.get(55));
        assertEquals(Integer.valueOf(57), t.getV57());
        assertEquals(57, t.get(56));
        assertEquals(Integer.valueOf(58), t.getV58());
        assertEquals(58, t.get(57));
        assertEquals(Integer.valueOf(59), t.getV59());
        assertEquals(59, t.get(58));
        assertEquals(Integer.valueOf(60), t.getV60());
        assertEquals(60, t.get(59));
        assertEquals(Integer.valueOf(61), t.getV61());
        assertEquals(61, t.get(60));
        assertEquals(Integer.valueOf(62), t.getV62());
        assertEquals(62, t.get(61));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple63() {
        Tuple63<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple63<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63);

        assertEquals(63, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(Integer.valueOf(29), t.getV29());
        assertEquals(29, t.get(28));
        assertEquals(Integer.valueOf(30), t.getV30());
        assertEquals(30, t.get(29));
        assertEquals(Integer.valueOf(31), t.getV31());
        assertEquals(31, t.get(30));
        assertEquals(Integer.valueOf(32), t.getV32());
        assertEquals(32, t.get(31));
        assertEquals(Integer.valueOf(33), t.getV33());
        assertEquals(33, t.get(32));
        assertEquals(Integer.valueOf(34), t.getV34());
        assertEquals(34, t.get(33));
        assertEquals(Integer.valueOf(35), t.getV35());
        assertEquals(35, t.get(34));
        assertEquals(Integer.valueOf(36), t.getV36());
        assertEquals(36, t.get(35));
        assertEquals(Integer.valueOf(37), t.getV37());
        assertEquals(37, t.get(36));
        assertEquals(Integer.valueOf(38), t.getV38());
        assertEquals(38, t.get(37));
        assertEquals(Integer.valueOf(39), t.getV39());
        assertEquals(39, t.get(38));
        assertEquals(Integer.valueOf(40), t.getV40());
        assertEquals(40, t.get(39));
        assertEquals(Integer.valueOf(41), t.getV41());
        assertEquals(41, t.get(40));
        assertEquals(Integer.valueOf(42), t.getV42());
        assertEquals(42, t.get(41));
        assertEquals(Integer.valueOf(43), t.getV43());
        assertEquals(43, t.get(42));
        assertEquals(Integer.valueOf(44), t.getV44());
        assertEquals(44, t.get(43));
        assertEquals(Integer.valueOf(45), t.getV45());
        assertEquals(45, t.get(44));
        assertEquals(Integer.valueOf(46), t.getV46());
        assertEquals(46, t.get(45));
        assertEquals(Integer.valueOf(47), t.getV47());
        assertEquals(47, t.get(46));
        assertEquals(Integer.valueOf(48), t.getV48());
        assertEquals(48, t.get(47));
        assertEquals(Integer.valueOf(49), t.getV49());
        assertEquals(49, t.get(48));
        assertEquals(Integer.valueOf(50), t.getV50());
        assertEquals(50, t.get(49));
        assertEquals(Integer.valueOf(51), t.getV51());
        assertEquals(51, t.get(50));
        assertEquals(Integer.valueOf(52), t.getV52());
        assertEquals(52, t.get(51));
        assertEquals(Integer.valueOf(53), t.getV53());
        assertEquals(53, t.get(52));
        assertEquals(Integer.valueOf(54), t.getV54());
        assertEquals(54, t.get(53));
        assertEquals(Integer.valueOf(55), t.getV55());
        assertEquals(55, t.get(54));
        assertEquals(Integer.valueOf(56), t.getV56());
        assertEquals(56, t.get(55));
        assertEquals(Integer.valueOf(57), t.getV57());
        assertEquals(57, t.get(56));
        assertEquals(Integer.valueOf(58), t.getV58());
        assertEquals(58, t.get(57));
        assertEquals(Integer.valueOf(59), t.getV59());
        assertEquals(59, t.get(58));
        assertEquals(Integer.valueOf(60), t.getV60());
        assertEquals(60, t.get(59));
        assertEquals(Integer.valueOf(61), t.getV61());
        assertEquals(61, t.get(60));
        assertEquals(Integer.valueOf(62), t.getV62());
        assertEquals(62, t.get(61));
        assertEquals(Integer.valueOf(63), t.getV63());
        assertEquals(63, t.get(62));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }

    public void testTuple64() {
        Tuple64<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer> t = new Tuple64<>(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64);

        assertEquals(64, t.size());
        assertEquals(Integer.valueOf(1), t.getV1());
        assertEquals(1, t.get(0));
        assertEquals(Integer.valueOf(2), t.getV2());
        assertEquals(2, t.get(1));
        assertEquals(Integer.valueOf(3), t.getV3());
        assertEquals(3, t.get(2));
        assertEquals(Integer.valueOf(4), t.getV4());
        assertEquals(4, t.get(3));
        assertEquals(Integer.valueOf(5), t.getV5());
        assertEquals(5, t.get(4));
        assertEquals(Integer.valueOf(6), t.getV6());
        assertEquals(6, t.get(5));
        assertEquals(Integer.valueOf(7), t.getV7());
        assertEquals(7, t.get(6));
        assertEquals(Integer.valueOf(8), t.getV8());
        assertEquals(8, t.get(7));
        assertEquals(Integer.valueOf(9), t.getV9());
        assertEquals(9, t.get(8));
        assertEquals(Integer.valueOf(10), t.getV10());
        assertEquals(10, t.get(9));
        assertEquals(Integer.valueOf(11), t.getV11());
        assertEquals(11, t.get(10));
        assertEquals(Integer.valueOf(12), t.getV12());
        assertEquals(12, t.get(11));
        assertEquals(Integer.valueOf(13), t.getV13());
        assertEquals(13, t.get(12));
        assertEquals(Integer.valueOf(14), t.getV14());
        assertEquals(14, t.get(13));
        assertEquals(Integer.valueOf(15), t.getV15());
        assertEquals(15, t.get(14));
        assertEquals(Integer.valueOf(16), t.getV16());
        assertEquals(16, t.get(15));
        assertEquals(Integer.valueOf(17), t.getV17());
        assertEquals(17, t.get(16));
        assertEquals(Integer.valueOf(18), t.getV18());
        assertEquals(18, t.get(17));
        assertEquals(Integer.valueOf(19), t.getV19());
        assertEquals(19, t.get(18));
        assertEquals(Integer.valueOf(20), t.getV20());
        assertEquals(20, t.get(19));
        assertEquals(Integer.valueOf(21), t.getV21());
        assertEquals(21, t.get(20));
        assertEquals(Integer.valueOf(22), t.getV22());
        assertEquals(22, t.get(21));
        assertEquals(Integer.valueOf(23), t.getV23());
        assertEquals(23, t.get(22));
        assertEquals(Integer.valueOf(24), t.getV24());
        assertEquals(24, t.get(23));
        assertEquals(Integer.valueOf(25), t.getV25());
        assertEquals(25, t.get(24));
        assertEquals(Integer.valueOf(26), t.getV26());
        assertEquals(26, t.get(25));
        assertEquals(Integer.valueOf(27), t.getV27());
        assertEquals(27, t.get(26));
        assertEquals(Integer.valueOf(28), t.getV28());
        assertEquals(28, t.get(27));
        assertEquals(Integer.valueOf(29), t.getV29());
        assertEquals(29, t.get(28));
        assertEquals(Integer.valueOf(30), t.getV30());
        assertEquals(30, t.get(29));
        assertEquals(Integer.valueOf(31), t.getV31());
        assertEquals(31, t.get(30));
        assertEquals(Integer.valueOf(32), t.getV32());
        assertEquals(32, t.get(31));
        assertEquals(Integer.valueOf(33), t.getV33());
        assertEquals(33, t.get(32));
        assertEquals(Integer.valueOf(34), t.getV34());
        assertEquals(34, t.get(33));
        assertEquals(Integer.valueOf(35), t.getV35());
        assertEquals(35, t.get(34));
        assertEquals(Integer.valueOf(36), t.getV36());
        assertEquals(36, t.get(35));
        assertEquals(Integer.valueOf(37), t.getV37());
        assertEquals(37, t.get(36));
        assertEquals(Integer.valueOf(38), t.getV38());
        assertEquals(38, t.get(37));
        assertEquals(Integer.valueOf(39), t.getV39());
        assertEquals(39, t.get(38));
        assertEquals(Integer.valueOf(40), t.getV40());
        assertEquals(40, t.get(39));
        assertEquals(Integer.valueOf(41), t.getV41());
        assertEquals(41, t.get(40));
        assertEquals(Integer.valueOf(42), t.getV42());
        assertEquals(42, t.get(41));
        assertEquals(Integer.valueOf(43), t.getV43());
        assertEquals(43, t.get(42));
        assertEquals(Integer.valueOf(44), t.getV44());
        assertEquals(44, t.get(43));
        assertEquals(Integer.valueOf(45), t.getV45());
        assertEquals(45, t.get(44));
        assertEquals(Integer.valueOf(46), t.getV46());
        assertEquals(46, t.get(45));
        assertEquals(Integer.valueOf(47), t.getV47());
        assertEquals(47, t.get(46));
        assertEquals(Integer.valueOf(48), t.getV48());
        assertEquals(48, t.get(47));
        assertEquals(Integer.valueOf(49), t.getV49());
        assertEquals(49, t.get(48));
        assertEquals(Integer.valueOf(50), t.getV50());
        assertEquals(50, t.get(49));
        assertEquals(Integer.valueOf(51), t.getV51());
        assertEquals(51, t.get(50));
        assertEquals(Integer.valueOf(52), t.getV52());
        assertEquals(52, t.get(51));
        assertEquals(Integer.valueOf(53), t.getV53());
        assertEquals(53, t.get(52));
        assertEquals(Integer.valueOf(54), t.getV54());
        assertEquals(54, t.get(53));
        assertEquals(Integer.valueOf(55), t.getV55());
        assertEquals(55, t.get(54));
        assertEquals(Integer.valueOf(56), t.getV56());
        assertEquals(56, t.get(55));
        assertEquals(Integer.valueOf(57), t.getV57());
        assertEquals(57, t.get(56));
        assertEquals(Integer.valueOf(58), t.getV58());
        assertEquals(58, t.get(57));
        assertEquals(Integer.valueOf(59), t.getV59());
        assertEquals(59, t.get(58));
        assertEquals(Integer.valueOf(60), t.getV60());
        assertEquals(60, t.get(59));
        assertEquals(Integer.valueOf(61), t.getV61());
        assertEquals(61, t.get(60));
        assertEquals(Integer.valueOf(62), t.getV62());
        assertEquals(62, t.get(61));
        assertEquals(Integer.valueOf(63), t.getV63());
        assertEquals(63, t.get(62));
        assertEquals(Integer.valueOf(64), t.getV64());
        assertEquals(64, t.get(63));
        assertEquals(t, t.subTuple(0, t.size()));
        assertEquals(t, t.clone());
    }
}
